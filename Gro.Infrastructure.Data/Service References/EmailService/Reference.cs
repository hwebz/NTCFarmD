//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gro.Infrastructure.Data.EmailService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivateUserRequestDto", Namespace="http://schemas.datacontract.org/2004/07/EmailServiceInt.Models")]
    [System.SerializableAttribute()]
    public partial class ActivateUserRequestDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNumberField, value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrateUserRequestDto", Namespace="http://schemas.datacontract.org/2004/07/EmailServiceInt.Models")]
    [System.SerializableAttribute()]
    public partial class RegistrateUserRequestDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsNotification", Namespace="http://schemas.datacontract.org/2004/07/EmailServiceInt.Models.CustomerSupport")]
    [System.SerializableAttribute()]
    public partial class SmsNotification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BulkLevereratSmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BulkPlaneratSmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlakLevereratSmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlakPlaneratSmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlakTelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GardshamtnignHamtatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GardshamtningPlaneratField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeveransplanViaEpostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressIdField, value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BulkLevereratSms {
            get {
                return this.BulkLevereratSmsField;
            }
            set {
                if ((this.BulkLevereratSmsField.Equals(value) != true)) {
                    this.BulkLevereratSmsField = value;
                    this.RaisePropertyChanged("BulkLevereratSms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BulkPlaneratSms {
            get {
                return this.BulkPlaneratSmsField;
            }
            set {
                if ((this.BulkPlaneratSmsField.Equals(value) != true)) {
                    this.BulkPlaneratSmsField = value;
                    this.RaisePropertyChanged("BulkPlaneratSms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FlakLevereratSms {
            get {
                return this.FlakLevereratSmsField;
            }
            set {
                if ((this.FlakLevereratSmsField.Equals(value) != true)) {
                    this.FlakLevereratSmsField = value;
                    this.RaisePropertyChanged("FlakLevereratSms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FlakPlaneratSms {
            get {
                return this.FlakPlaneratSmsField;
            }
            set {
                if ((this.FlakPlaneratSmsField.Equals(value) != true)) {
                    this.FlakPlaneratSmsField = value;
                    this.RaisePropertyChanged("FlakPlaneratSms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FlakTelefon {
            get {
                return this.FlakTelefonField;
            }
            set {
                if ((this.FlakTelefonField.Equals(value) != true)) {
                    this.FlakTelefonField = value;
                    this.RaisePropertyChanged("FlakTelefon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GardshamtnignHamtat {
            get {
                return this.GardshamtnignHamtatField;
            }
            set {
                if ((this.GardshamtnignHamtatField.Equals(value) != true)) {
                    this.GardshamtnignHamtatField = value;
                    this.RaisePropertyChanged("GardshamtnignHamtat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GardshamtningPlanerat {
            get {
                return this.GardshamtningPlaneratField;
            }
            set {
                if ((this.GardshamtningPlaneratField.Equals(value) != true)) {
                    this.GardshamtningPlaneratField = value;
                    this.RaisePropertyChanged("GardshamtningPlanerat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeveransplanViaEpost {
            get {
                return this.LeveransplanViaEpostField;
            }
            set {
                if ((this.LeveransplanViaEpostField.Equals(value) != true)) {
                    this.LeveransplanViaEpostField = value;
                    this.RaisePropertyChanged("LeveransplanViaEpost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmailService.IEmailService")]
    public interface IEmailService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendActivateMail", ReplyAction="http://tempuri.org/IEmailService/SendActivateMailResponse")]
        bool SendActivateMail(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto activateUser, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendActivateMail", ReplyAction="http://tempuri.org/IEmailService/SendActivateMailResponse")]
        System.Threading.Tasks.Task<bool> SendActivateMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto activateUser, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendRegistrationMail", ReplyAction="http://tempuri.org/IEmailService/SendRegistrationMailResponse")]
        bool SendRegistrationMail(string fromAddress, Gro.Infrastructure.Data.EmailService.RegistrateUserRequestDto registrateUser, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendRegistrationMail", ReplyAction="http://tempuri.org/IEmailService/SendRegistrationMailResponse")]
        System.Threading.Tasks.Task<bool> SendRegistrationMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.RegistrateUserRequestDto registrateUser, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendNewPasswordMail", ReplyAction="http://tempuri.org/IEmailService/SendNewPasswordMailResponse")]
        bool SendNewPasswordMail(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto registrateUser, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendNewPasswordMail", ReplyAction="http://tempuri.org/IEmailService/SendNewPasswordMailResponse")]
        System.Threading.Tasks.Task<bool> SendNewPasswordMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto registrateUser, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendLostUserIdMail", ReplyAction="http://tempuri.org/IEmailService/SendLostUserIdMailResponse")]
        bool SendLostUserIdMail(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto lostUserIdUser, string subject, string body, string userId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendLostUserIdMail", ReplyAction="http://tempuri.org/IEmailService/SendLostUserIdMailResponse")]
        System.Threading.Tasks.Task<bool> SendLostUserIdMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto lostUserIdUser, string subject, string body, string userId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendChangedNotificationsMail", ReplyAction="http://tempuri.org/IEmailService/SendChangedNotificationsMailResponse")]
        bool SendChangedNotificationsMail(string fromAddress, string toAddress, Gro.Infrastructure.Data.EmailService.SmsNotification notifications, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendChangedNotificationsMail", ReplyAction="http://tempuri.org/IEmailService/SendChangedNotificationsMailResponse")]
        System.Threading.Tasks.Task<bool> SendChangedNotificationsMailAsync(string fromAddress, string toAddress, Gro.Infrastructure.Data.EmailService.SmsNotification notifications, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendMail", ReplyAction="http://tempuri.org/IEmailService/SendMailResponse")]
        bool SendMail(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendMail", ReplyAction="http://tempuri.org/IEmailService/SendMailResponse")]
        System.Threading.Tasks.Task<bool> SendMailAsync(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendMailWithAttachements", ReplyAction="http://tempuri.org/IEmailService/SendMailWithAttachementsResponse")]
        bool SendMailWithAttachements(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, System.Collections.Generic.KeyValuePair<string, byte[]>[] files, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/SendMailWithAttachements", ReplyAction="http://tempuri.org/IEmailService/SendMailWithAttachementsResponse")]
        System.Threading.Tasks.Task<bool> SendMailWithAttachementsAsync(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, System.Collections.Generic.KeyValuePair<string, byte[]>[] files, string ticket);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailServiceChannel : Gro.Infrastructure.Data.EmailService.IEmailService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailServiceClient : System.ServiceModel.ClientBase<Gro.Infrastructure.Data.EmailService.IEmailService>, Gro.Infrastructure.Data.EmailService.IEmailService {
        
        public EmailServiceClient() {
        }
        
        public EmailServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendActivateMail(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto activateUser, string subject, string body, string ticket) {
            return base.Channel.SendActivateMail(fromAddress, activateUser, subject, body, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> SendActivateMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto activateUser, string subject, string body, string ticket) {
            return base.Channel.SendActivateMailAsync(fromAddress, activateUser, subject, body, ticket);
        }
        
        public bool SendRegistrationMail(string fromAddress, Gro.Infrastructure.Data.EmailService.RegistrateUserRequestDto registrateUser, string subject, string body, string ticket) {
            return base.Channel.SendRegistrationMail(fromAddress, registrateUser, subject, body, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> SendRegistrationMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.RegistrateUserRequestDto registrateUser, string subject, string body, string ticket) {
            return base.Channel.SendRegistrationMailAsync(fromAddress, registrateUser, subject, body, ticket);
        }
        
        public bool SendNewPasswordMail(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto registrateUser, string subject, string body, string ticket) {
            return base.Channel.SendNewPasswordMail(fromAddress, registrateUser, subject, body, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> SendNewPasswordMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto registrateUser, string subject, string body, string ticket) {
            return base.Channel.SendNewPasswordMailAsync(fromAddress, registrateUser, subject, body, ticket);
        }
        
        public bool SendLostUserIdMail(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto lostUserIdUser, string subject, string body, string userId, string ticket) {
            return base.Channel.SendLostUserIdMail(fromAddress, lostUserIdUser, subject, body, userId, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> SendLostUserIdMailAsync(string fromAddress, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto lostUserIdUser, string subject, string body, string userId, string ticket) {
            return base.Channel.SendLostUserIdMailAsync(fromAddress, lostUserIdUser, subject, body, userId, ticket);
        }
        
        public bool SendChangedNotificationsMail(string fromAddress, string toAddress, Gro.Infrastructure.Data.EmailService.SmsNotification notifications, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto user, string ticket) {
            return base.Channel.SendChangedNotificationsMail(fromAddress, toAddress, notifications, user, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> SendChangedNotificationsMailAsync(string fromAddress, string toAddress, Gro.Infrastructure.Data.EmailService.SmsNotification notifications, Gro.Infrastructure.Data.EmailService.ActivateUserRequestDto user, string ticket) {
            return base.Channel.SendChangedNotificationsMailAsync(fromAddress, toAddress, notifications, user, ticket);
        }
        
        public bool SendMail(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, string ticket) {
            return base.Channel.SendMail(fromAddress, toAddresses, ccAddresses, subject, body, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> SendMailAsync(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, string ticket) {
            return base.Channel.SendMailAsync(fromAddress, toAddresses, ccAddresses, subject, body, ticket);
        }
        
        public bool SendMailWithAttachements(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, System.Collections.Generic.KeyValuePair<string, byte[]>[] files, string ticket) {
            return base.Channel.SendMailWithAttachements(fromAddress, toAddresses, ccAddresses, subject, body, files, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> SendMailWithAttachementsAsync(string fromAddress, string[] toAddresses, string[] ccAddresses, string subject, string body, System.Collections.Generic.KeyValuePair<string, byte[]>[] files, string ticket) {
            return base.Channel.SendMailWithAttachementsAsync(fromAddress, toAddresses, ccAddresses, subject, body, files, ticket);
        }
    }
}
