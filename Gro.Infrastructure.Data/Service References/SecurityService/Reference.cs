//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gro.Infrastructure.Data.SecurityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestUser", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt.BaseClasses")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gro.Infrastructure.Data.SecurityService.RequestUserDeep))]
    public partial class RequestUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KundNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KundNr {
            get {
                return this.KundNrField;
            }
            set {
                if ((object.ReferenceEquals(this.KundNrField, value) != true)) {
                    this.KundNrField = value;
                    this.RaisePropertyChanged("KundNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestUserDeep", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt.BaseClasses")]
    [System.SerializableAttribute()]
    public partial class RequestUserDeep : Gro.Infrastructure.Data.SecurityService.RequestUser {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLocketOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSpmlSupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastActivityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLockedOutDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastPasswordChangedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordquestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfilePicURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocketOut {
            get {
                return this.IsLocketOutField;
            }
            set {
                if ((this.IsLocketOutField.Equals(value) != true)) {
                    this.IsLocketOutField = value;
                    this.RaisePropertyChanged("IsLocketOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpmlSupplier {
            get {
                return this.IsSpmlSupplierField;
            }
            set {
                if ((this.IsSpmlSupplierField.Equals(value) != true)) {
                    this.IsSpmlSupplierField = value;
                    this.RaisePropertyChanged("IsSpmlSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastActivityDate {
            get {
                return this.LastActivityDateField;
            }
            set {
                if ((this.LastActivityDateField.Equals(value) != true)) {
                    this.LastActivityDateField = value;
                    this.RaisePropertyChanged("LastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLockedOutDate {
            get {
                return this.LastLockedOutDateField;
            }
            set {
                if ((this.LastLockedOutDateField.Equals(value) != true)) {
                    this.LastLockedOutDateField = value;
                    this.RaisePropertyChanged("LastLockedOutDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastPasswordChangedDate {
            get {
                return this.LastPasswordChangedDateField;
            }
            set {
                if ((this.LastPasswordChangedDateField.Equals(value) != true)) {
                    this.LastPasswordChangedDateField = value;
                    this.RaisePropertyChanged("LastPasswordChangedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWordquestion {
            get {
                return this.PassWordquestionField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordquestionField, value) != true)) {
                    this.PassWordquestionField = value;
                    this.RaisePropertyChanged("PassWordquestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordAnswer {
            get {
                return this.PasswordAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordAnswerField, value) != true)) {
                    this.PasswordAnswerField = value;
                    this.RaisePropertyChanged("PasswordAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Personnr {
            get {
                return this.PersonnrField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonnrField, value) != true)) {
                    this.PersonnrField = value;
                    this.RaisePropertyChanged("Personnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePicURL {
            get {
                return this.ProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicURLField, value) != true)) {
                    this.ProfilePicURLField = value;
                    this.RaisePropertyChanged("ProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderKey {
            get {
                return this.ProviderKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderKeyField, value) != true)) {
                    this.ProviderKeyField = value;
                    this.RaisePropertyChanged("ProviderKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SurName {
            get {
                return this.SurNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurNameField, value) != true)) {
                    this.SurNameField = value;
                    this.RaisePropertyChanged("SurName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Typ {
            get {
                return this.TypField;
            }
            set {
                if ((this.TypField.Equals(value) != true)) {
                    this.TypField = value;
                    this.RaisePropertyChanged("Typ");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestRole", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt.BaseClasses")]
    [System.SerializableAttribute()]
    public partial class RequestRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BehorighetsmaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeskrivningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForstaSidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrittFalt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrittFalt2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrittFalt3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrittFalt4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrittFalt5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RollField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Behorighetsmask {
            get {
                return this.BehorighetsmaskField;
            }
            set {
                if ((object.ReferenceEquals(this.BehorighetsmaskField, value) != true)) {
                    this.BehorighetsmaskField = value;
                    this.RaisePropertyChanged("Behorighetsmask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beskrivning {
            get {
                return this.BeskrivningField;
            }
            set {
                if ((object.ReferenceEquals(this.BeskrivningField, value) != true)) {
                    this.BeskrivningField = value;
                    this.RaisePropertyChanged("Beskrivning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForstaSida {
            get {
                return this.ForstaSidaField;
            }
            set {
                if ((object.ReferenceEquals(this.ForstaSidaField, value) != true)) {
                    this.ForstaSidaField = value;
                    this.RaisePropertyChanged("ForstaSida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrittFalt1 {
            get {
                return this.FrittFalt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FrittFalt1Field, value) != true)) {
                    this.FrittFalt1Field = value;
                    this.RaisePropertyChanged("FrittFalt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrittFalt2 {
            get {
                return this.FrittFalt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FrittFalt2Field, value) != true)) {
                    this.FrittFalt2Field = value;
                    this.RaisePropertyChanged("FrittFalt2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrittFalt3 {
            get {
                return this.FrittFalt3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FrittFalt3Field, value) != true)) {
                    this.FrittFalt3Field = value;
                    this.RaisePropertyChanged("FrittFalt3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrittFalt4 {
            get {
                return this.FrittFalt4Field;
            }
            set {
                if ((object.ReferenceEquals(this.FrittFalt4Field, value) != true)) {
                    this.FrittFalt4Field = value;
                    this.RaisePropertyChanged("FrittFalt4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrittFalt5 {
            get {
                return this.FrittFalt5Field;
            }
            set {
                if ((object.ReferenceEquals(this.FrittFalt5Field, value) != true)) {
                    this.FrittFalt5Field = value;
                    this.RaisePropertyChanged("FrittFalt5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Roll {
            get {
                return this.RollField;
            }
            set {
                if ((object.ReferenceEquals(this.RollField, value) != true)) {
                    this.RollField = value;
                    this.RaisePropertyChanged("Roll");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecurityService.ISecurityService")]
    public interface ISecurityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/IsUserPasswordOutdated", ReplyAction="http://tempuri.org/ISecurityService/IsUserPasswordOutdatedResponse")]
        bool IsUserPasswordOutdated(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/IsUserPasswordOutdated", ReplyAction="http://tempuri.org/ISecurityService/IsUserPasswordOutdatedResponse")]
        System.Threading.Tasks.Task<bool> IsUserPasswordOutdatedAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/WriteLoginEvent", ReplyAction="http://tempuri.org/ISecurityService/WriteLoginEventResponse")]
        void WriteLoginEvent(string customerNumber, string userId, string ip, string browser, bool success);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/WriteLoginEvent", ReplyAction="http://tempuri.org/ISecurityService/WriteLoginEventResponse")]
        System.Threading.Tasks.Task WriteLoginEventAsync(string customerNumber, string userId, string ip, string browser, bool success);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetTicket", ReplyAction="http://tempuri.org/ISecurityService/GetTicketResponse")]
        string GetTicket(string username, string password, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetTicket", ReplyAction="http://tempuri.org/ISecurityService/GetTicketResponse")]
        System.Threading.Tasks.Task<string> GetTicketAsync(string username, string password, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ValidateTicket", ReplyAction="http://tempuri.org/ISecurityService/ValidateTicketResponse")]
        bool ValidateTicket(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ValidateTicket", ReplyAction="http://tempuri.org/ISecurityService/ValidateTicketResponse")]
        System.Threading.Tasks.Task<bool> ValidateTicketAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ValidateUser", ReplyAction="http://tempuri.org/ISecurityService/ValidateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/ValidateUserSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool ValidateUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ValidateUser", ReplyAction="http://tempuri.org/ISecurityService/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/SaveUserPictureURL", ReplyAction="http://tempuri.org/ISecurityService/SaveUserPictureURLResponse")]
        bool SaveUserPictureURL(int userId, string pictureURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/SaveUserPictureURL", ReplyAction="http://tempuri.org/ISecurityService/SaveUserPictureURLResponse")]
        System.Threading.Tasks.Task<bool> SaveUserPictureURLAsync(int userId, string pictureURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/SaveCustomerPictureURL", ReplyAction="http://tempuri.org/ISecurityService/SaveCustomerPictureURLResponse")]
        bool SaveCustomerPictureURL(int customerId, string pictureURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/SaveCustomerPictureURL", ReplyAction="http://tempuri.org/ISecurityService/SaveCustomerPictureURLResponse")]
        System.Threading.Tasks.Task<bool> SaveCustomerPictureURLAsync(int customerId, string pictureURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUser", ReplyAction="http://tempuri.org/ISecurityService/GetUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetUserSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.ResponseUser GetUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUser", ReplyAction="http://tempuri.org/ISecurityService/GetUserResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> GetUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UnlockUser", ReplyAction="http://tempuri.org/ISecurityService/UnlockUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/UnlockUserSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool UnlockUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UnlockUser", ReplyAction="http://tempuri.org/ISecurityService/UnlockUserResponse")]
        System.Threading.Tasks.Task<bool> UnlockUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/Ping", ReplyAction="http://tempuri.org/ISecurityService/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/Ping", ReplyAction="http://tempuri.org/ISecurityService/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateValid", ReplyAction="http://tempuri.org/ISecurityService/UpdateValidResponse")]
        void UpdateValid(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateValid", ReplyAction="http://tempuri.org/ISecurityService/UpdateValidResponse")]
        System.Threading.Tasks.Task UpdateValidAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetSalesRoles", ReplyAction="http://tempuri.org/ISecurityService/GetSalesRolesResponse")]
        string[] GetSalesRoles(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetSalesRoles", ReplyAction="http://tempuri.org/ISecurityService/GetSalesRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetSalesRolesAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUsersForCustomer", ReplyAction="http://tempuri.org/ISecurityService/GetUsersForCustomerResponse")]
        Gro.Core.DataModels.Security.User[] GetUsersForCustomer(int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUsersForCustomer", ReplyAction="http://tempuri.org/ISecurityService/GetUsersForCustomerResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.User[]> GetUsersForCustomerAsync(int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetCustomersForUser", ReplyAction="http://tempuri.org/ISecurityService/GetCustomersForUserResponse")]
        Gro.Core.DataModels.Security.CustomerBasicInfo[] GetCustomersForUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetCustomersForUser", ReplyAction="http://tempuri.org/ISecurityService/GetCustomersForUserResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.CustomerBasicInfo[]> GetCustomersForUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserCustomerProfile", ReplyAction="http://tempuri.org/ISecurityService/GetUserCustomerProfileResponse")]
        string GetUserCustomerProfile(int userId, int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserCustomerProfile", ReplyAction="http://tempuri.org/ISecurityService/GetUserCustomerProfileResponse")]
        System.Threading.Tasks.Task<string> GetUserCustomerProfileAsync(int userId, int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetProfileForUser", ReplyAction="http://tempuri.org/ISecurityService/GetProfileForUserResponse")]
        Gro.Core.DataModels.Security.UserProfile[] GetProfileForUser(int customerId, int userId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetProfileForUser", ReplyAction="http://tempuri.org/ISecurityService/GetProfileForUserResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserProfile[]> GetProfileForUserAsync(int customerId, int userId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetCustomerUsersByProfile", ReplyAction="http://tempuri.org/ISecurityService/GetCustomerUsersByProfileResponse")]
        Gro.Core.DataModels.Security.UserProfile[] GetCustomerUsersByProfile(int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetCustomerUsersByProfile", ReplyAction="http://tempuri.org/ISecurityService/GetCustomerUsersByProfileResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserProfile[]> GetCustomerUsersByProfileAsync(int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetProfiles", ReplyAction="http://tempuri.org/ISecurityService/GetProfilesResponse")]
        Gro.Core.DataModels.Security.Profile[] GetProfiles(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetProfiles", ReplyAction="http://tempuri.org/ISecurityService/GetProfilesResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Profile[]> GetProfilesAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetProfileRoles", ReplyAction="http://tempuri.org/ISecurityService/GetProfileRolesResponse")]
        Gro.Core.DataModels.Security.ProfileRole[] GetProfileRoles(string profileId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetProfileRoles", ReplyAction="http://tempuri.org/ISecurityService/GetProfileRolesResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ProfileRole[]> GetProfileRolesAsync(string profileId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CheckSSNAgainstOrgNo", ReplyAction="http://tempuri.org/ISecurityService/CheckSSNAgainstOrgNoResponse")]
        int CheckSSNAgainstOrgNo(string customerNo, string SSN, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CheckSSNAgainstOrgNo", ReplyAction="http://tempuri.org/ISecurityService/CheckSSNAgainstOrgNoResponse")]
        System.Threading.Tasks.Task<int> CheckSSNAgainstOrgNoAsync(string customerNo, string SSN, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ChangePassword", ReplyAction="http://tempuri.org/ISecurityService/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/ChangePasswordSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool ChangePassword(Gro.Infrastructure.Data.SecurityService.RequestUser user, string oldPwd, string newPwd, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ChangePassword", ReplyAction="http://tempuri.org/ISecurityService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string oldPwd, string newPwd, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CreateUser", ReplyAction="http://tempuri.org/ISecurityService/CreateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/CreateUserSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Infrastructure.Data.SecurityService.RequestUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.User[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.CustomerBasicInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.CustomerBasicInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.UserProfile[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.UserProfile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.Profile[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.Profile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.ProfileRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.ProfileRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Infrastructure.Data.SecurityService.RequestUserDeep))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Infrastructure.Data.SecurityService.RequestUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Infrastructure.Data.SecurityService.RequestRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.Role[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.Role))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.UserRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.UserRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.UserRights[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.UserRights))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.Company))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.ResponseUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gro.Core.DataModels.Security.ResponseUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Web.Security.MembershipCreateStatus))]
        Gro.Infrastructure.Data.SecurityService.CreateUserResponse CreateUser(Gro.Infrastructure.Data.SecurityService.CreateUserRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CreateUser", ReplyAction="http://tempuri.org/ISecurityService/CreateUserResponse")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.CreateUserResponse> CreateUserAsync(Gro.Infrastructure.Data.SecurityService.CreateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/DeleteUser", ReplyAction="http://tempuri.org/ISecurityService/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/DeleteUserSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool DeleteUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, bool deleteAllRelatedData, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/DeleteUser", ReplyAction="http://tempuri.org/ISecurityService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, bool deleteAllRelatedData, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetAllUsers", ReplyAction="http://tempuri.org/ISecurityService/GetAllUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetAllUsersSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Infrastructure.Data.SecurityService.GetAllUsersResponse GetAllUsers(Gro.Infrastructure.Data.SecurityService.GetAllUsersRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetAllUsers", ReplyAction="http://tempuri.org/ISecurityService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.GetAllUsersResponse> GetAllUsersAsync(Gro.Infrastructure.Data.SecurityService.GetAllUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetNumberOfUsersOnline", ReplyAction="http://tempuri.org/ISecurityService/GetNumberOfUsersOnlineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetNumberOfUsersOnlineSecurityExceptionInfoFa" +
            "ult", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        int GetNumberOfUsersOnline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetNumberOfUsersOnline", ReplyAction="http://tempuri.org/ISecurityService/GetNumberOfUsersOnlineResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfUsersOnlineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetPassword", ReplyAction="http://tempuri.org/ISecurityService/GetPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetPasswordSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        string GetPassword(Gro.Infrastructure.Data.SecurityService.RequestUser user, string answer, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetPassword", ReplyAction="http://tempuri.org/ISecurityService/GetPasswordResponse")]
        System.Threading.Tasks.Task<string> GetPasswordAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string answer, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserNameByEmail", ReplyAction="http://tempuri.org/ISecurityService/GetUserNameByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetUserNameByEmailSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.ResponseUser GetUserNameByEmail(string email, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserNameByEmail", ReplyAction="http://tempuri.org/ISecurityService/GetUserNameByEmailResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> GetUserNameByEmailAsync(string email, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserNameByEmailAndCustomerNumber", ReplyAction="http://tempuri.org/ISecurityService/GetUserNameByEmailAndCustomerNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetUserNameByEmailAndCustomerNumberSecurityEx" +
            "ceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.ResponseUser GetUserNameByEmailAndCustomerNumber(string email, string customerNumber, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserNameByEmailAndCustomerNumber", ReplyAction="http://tempuri.org/ISecurityService/GetUserNameByEmailAndCustomerNumberResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> GetUserNameByEmailAndCustomerNumberAsync(string email, string customerNumber, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUserByEmail", ReplyAction="http://tempuri.org/ISecurityService/FindUserByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/FindUserByEmailSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.ResponseUser FindUserByEmail(string email, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUserByEmail", ReplyAction="http://tempuri.org/ISecurityService/FindUserByEmailResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> FindUserByEmailAsync(string email, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUserByName", ReplyAction="http://tempuri.org/ISecurityService/FindUserByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/FindUserByNameSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.ResponseUser FindUserByName(string name, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUserByName", ReplyAction="http://tempuri.org/ISecurityService/FindUserByNameResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> FindUserByNameAsync(string name, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ResetPassword", ReplyAction="http://tempuri.org/ISecurityService/ResetPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/ResetPasswordSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        string ResetPassword(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/ResetPassword", ReplyAction="http://tempuri.org/ISecurityService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<string> ResetPasswordAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateUser", ReplyAction="http://tempuri.org/ISecurityService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/UpdateUserSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool UpdateUser(Gro.Infrastructure.Data.SecurityService.RequestUserDeep user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateUser", ReplyAction="http://tempuri.org/ISecurityService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUserDeep user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateFailureCount", ReplyAction="http://tempuri.org/ISecurityService/UpdateFailureCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/UpdateFailureCountSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        void UpdateFailureCount(Gro.Infrastructure.Data.SecurityService.RequestUser user, string failureType, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/UpdateFailureCount", ReplyAction="http://tempuri.org/ISecurityService/UpdateFailureCountResponse")]
        System.Threading.Tasks.Task UpdateFailureCountAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string failureType, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUsersByName", ReplyAction="http://tempuri.org/ISecurityService/FindUsersByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/FindUsersByNameSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Infrastructure.Data.SecurityService.FindUsersByNameResponse FindUsersByName(Gro.Infrastructure.Data.SecurityService.FindUsersByNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUsersByName", ReplyAction="http://tempuri.org/ISecurityService/FindUsersByNameResponse")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.FindUsersByNameResponse> FindUsersByNameAsync(Gro.Infrastructure.Data.SecurityService.FindUsersByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUsersByEmail", ReplyAction="http://tempuri.org/ISecurityService/FindUsersByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/FindUsersByEmailSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Infrastructure.Data.SecurityService.FindUsersByEmailResponse FindUsersByEmail(Gro.Infrastructure.Data.SecurityService.FindUsersByEmailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUsersByEmail", ReplyAction="http://tempuri.org/ISecurityService/FindUsersByEmailResponse")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.FindUsersByEmailResponse> FindUsersByEmailAsync(Gro.Infrastructure.Data.SecurityService.FindUsersByEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/AddUsersToRoles", ReplyAction="http://tempuri.org/ISecurityService/AddUsersToRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/AddUsersToRolesSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        void AddUsersToRoles(Gro.Infrastructure.Data.SecurityService.RequestUser[] user, string[] rolenames, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/AddUsersToRoles", ReplyAction="http://tempuri.org/ISecurityService/AddUsersToRolesResponse")]
        System.Threading.Tasks.Task AddUsersToRolesAsync(Gro.Infrastructure.Data.SecurityService.RequestUser[] user, string[] rolenames, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CreateRole", ReplyAction="http://tempuri.org/ISecurityService/CreateRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/CreateRoleSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool CreateRole(Gro.Infrastructure.Data.SecurityService.RequestRole role, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CreateRole", ReplyAction="http://tempuri.org/ISecurityService/CreateRoleResponse")]
        System.Threading.Tasks.Task<bool> CreateRoleAsync(Gro.Infrastructure.Data.SecurityService.RequestRole role, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/DeleteRole", ReplyAction="http://tempuri.org/ISecurityService/DeleteRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/DeleteRoleSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool DeleteRole(string roleName, bool throwOnPopulatedRole, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/DeleteRole", ReplyAction="http://tempuri.org/ISecurityService/DeleteRoleResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoleAsync(string roleName, bool throwOnPopulatedRole, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetAllRoles", ReplyAction="http://tempuri.org/ISecurityService/GetAllRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetAllRolesSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.Role[] GetAllRoles(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetAllRoles", ReplyAction="http://tempuri.org/ISecurityService/GetAllRolesResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Role[]> GetAllRolesAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetPrimaryRoles", ReplyAction="http://tempuri.org/ISecurityService/GetPrimaryRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetPrimaryRolesSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        string[] GetPrimaryRoles(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetPrimaryRoles", ReplyAction="http://tempuri.org/ISecurityService/GetPrimaryRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetPrimaryRolesAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetNonPrimaryRoles", ReplyAction="http://tempuri.org/ISecurityService/GetNonPrimaryRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetNonPrimaryRolesSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        string[] GetNonPrimaryRoles(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetNonPrimaryRoles", ReplyAction="http://tempuri.org/ISecurityService/GetNonPrimaryRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetNonPrimaryRolesAsync(string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetRolesForUser", ReplyAction="http://tempuri.org/ISecurityService/GetRolesForUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetRolesForUserSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.UserRole[] GetRolesForUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetRolesForUser", ReplyAction="http://tempuri.org/ISecurityService/GetRolesForUserResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserRole[]> GetRolesForUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetSalesRolesForCustomer", ReplyAction="http://tempuri.org/ISecurityService/GetSalesRolesForCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetSalesRolesForCustomerSecurityExceptionInfo" +
            "Fault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        string[] GetSalesRolesForCustomer(string customerNumber, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetSalesRolesForCustomer", ReplyAction="http://tempuri.org/ISecurityService/GetSalesRolesForCustomerResponse")]
        System.Threading.Tasks.Task<string[]> GetSalesRolesForCustomerAsync(string customerNumber, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUsersInRole", ReplyAction="http://tempuri.org/ISecurityService/GetUsersInRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetUsersInRoleSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.ResponseUser[] GetUsersInRole(string roleName, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUsersInRole", ReplyAction="http://tempuri.org/ISecurityService/GetUsersInRoleResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser[]> GetUsersInRoleAsync(string roleName, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/IsUserInRole", ReplyAction="http://tempuri.org/ISecurityService/IsUserInRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/IsUserInRoleSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool IsUserInRole(Gro.Infrastructure.Data.SecurityService.RequestUser user, string roleName, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/IsUserInRole", ReplyAction="http://tempuri.org/ISecurityService/IsUserInRoleResponse")]
        System.Threading.Tasks.Task<bool> IsUserInRoleAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string roleName, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/RemoveUsersFromRoles", ReplyAction="http://tempuri.org/ISecurityService/RemoveUsersFromRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/RemoveUsersFromRolesSecurityExceptionInfoFaul" +
            "t", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        void RemoveUsersFromRoles(Gro.Infrastructure.Data.SecurityService.RequestUser[] users, Gro.Core.DataModels.Security.UserRole[] rolenames, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/RemoveUsersFromRoles", ReplyAction="http://tempuri.org/ISecurityService/RemoveUsersFromRolesResponse")]
        System.Threading.Tasks.Task RemoveUsersFromRolesAsync(Gro.Infrastructure.Data.SecurityService.RequestUser[] users, Gro.Core.DataModels.Security.UserRole[] rolenames, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/RoleExists", ReplyAction="http://tempuri.org/ISecurityService/RoleExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/RoleExistsSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool RoleExists(string rolename, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/RoleExists", ReplyAction="http://tempuri.org/ISecurityService/RoleExistsResponse")]
        System.Threading.Tasks.Task<bool> RoleExistsAsync(string rolename, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUsersInRole", ReplyAction="http://tempuri.org/ISecurityService/FindUsersInRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/FindUsersInRoleSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.ResponseUser[] FindUsersInRole(string roleName, string usernameToMatch, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/FindUsersInRole", ReplyAction="http://tempuri.org/ISecurityService/FindUsersInRoleResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser[]> FindUsersInRoleAsync(string roleName, string usernameToMatch, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserRights", ReplyAction="http://tempuri.org/ISecurityService/GetUserRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetUserRightsSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        Gro.Core.DataModels.Security.UserRights[] GetUserRights(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserRights", ReplyAction="http://tempuri.org/ISecurityService/GetUserRightsResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserRights[]> GetUserRightsAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserSecurityProfile", ReplyAction="http://tempuri.org/ISecurityService/GetUserSecurityProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetUserSecurityProfileSecurityExceptionInfoFa" +
            "ult", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        System.Collections.Generic.Dictionary<string, string[]> GetUserSecurityProfile(string userId, int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetUserSecurityProfile", ReplyAction="http://tempuri.org/ISecurityService/GetUserSecurityProfileResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string[]>> GetUserSecurityProfileAsync(string userId, int customerId, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CheckPasswordGuid", ReplyAction="http://tempuri.org/ISecurityService/CheckPasswordGuidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/CheckPasswordGuidSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        bool CheckPasswordGuid(Gro.Infrastructure.Data.SecurityService.RequestUser user, string guid, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/CheckPasswordGuid", ReplyAction="http://tempuri.org/ISecurityService/CheckPasswordGuidResponse")]
        System.Threading.Tasks.Task<bool> CheckPasswordGuidAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string guid, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetPasswordGuid", ReplyAction="http://tempuri.org/ISecurityService/GetPasswordGuidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Core.DataModels.Security.SecurityExceptionInfo), Action="http://tempuri.org/ISecurityService/GetPasswordGuidSecurityExceptionInfoFault", Name="SecurityExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/SecurityServiceInt")]
        string GetPasswordGuid(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetPasswordGuid", ReplyAction="http://tempuri.org/ISecurityService/GetPasswordGuidResponse")]
        System.Threading.Tasks.Task<string> GetPasswordGuidAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetExistingCustomer", ReplyAction="http://tempuri.org/ISecurityService/GetExistingCustomerResponse")]
        Gro.Core.DataModels.Security.Company GetExistingCustomer(string customerNo, string orgNo, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetExistingCustomer", ReplyAction="http://tempuri.org/ISecurityService/GetExistingCustomerResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Company> GetExistingCustomerAsync(string customerNo, string orgNo, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetLuciaRole", ReplyAction="http://tempuri.org/ISecurityService/GetLuciaRoleResponse")]
        Gro.Core.DataModels.Security.Role GetLuciaRole(string customerNr, string ssn, string ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurityService/GetLuciaRole", ReplyAction="http://tempuri.org/ISecurityService/GetLuciaRoleResponse")]
        System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Role> GetLuciaRoleAsync(string customerNr, string ssn, string ticket);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string passwordQuestion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string passwordAnswer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool isApproved;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public object providerUserKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string ticket;
        
        public CreateUserRequest() {
        }
        
        public CreateUserRequest(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, string ticket) {
            this.username = username;
            this.password = password;
            this.email = email;
            this.passwordQuestion = passwordQuestion;
            this.passwordAnswer = passwordAnswer;
            this.isApproved = isApproved;
            this.providerUserKey = providerUserKey;
            this.ticket = ticket;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Gro.Core.DataModels.Security.ResponseUser CreateUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Web.Security.MembershipCreateStatus status;
        
        public CreateUserResponse() {
        }
        
        public CreateUserResponse(Gro.Core.DataModels.Security.ResponseUser CreateUserResult, System.Web.Security.MembershipCreateStatus status) {
            this.CreateUserResult = CreateUserResult;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllUsers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ticket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pageSize;
        
        public GetAllUsersRequest() {
        }
        
        public GetAllUsersRequest(string ticket, int pageIndex, int pageSize) {
            this.ticket = ticket;
            this.pageIndex = pageIndex;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllUsersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Gro.Core.DataModels.Security.ResponseUser[] GetAllUsersResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int totalRecords;
        
        public GetAllUsersResponse() {
        }
        
        public GetAllUsersResponse(Gro.Core.DataModels.Security.ResponseUser[] GetAllUsersResult, int totalRecords) {
            this.GetAllUsersResult = GetAllUsersResult;
            this.totalRecords = totalRecords;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string usernameToMatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ticket;
        
        public FindUsersByNameRequest() {
        }
        
        public FindUsersByNameRequest(string usernameToMatch, int pageIndex, int pageSize, string ticket) {
            this.usernameToMatch = usernameToMatch;
            this.pageIndex = pageIndex;
            this.pageSize = pageSize;
            this.ticket = ticket;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Gro.Core.DataModels.Security.ResponseUser[] FindUsersByNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int totalRecords;
        
        public FindUsersByNameResponse() {
        }
        
        public FindUsersByNameResponse(Gro.Core.DataModels.Security.ResponseUser[] FindUsersByNameResult, int totalRecords) {
            this.FindUsersByNameResult = FindUsersByNameResult;
            this.totalRecords = totalRecords;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByEmail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByEmailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string emailToMatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pageIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ticket;
        
        public FindUsersByEmailRequest() {
        }
        
        public FindUsersByEmailRequest(string emailToMatch, int pageIndex, int pageSize, string ticket) {
            this.emailToMatch = emailToMatch;
            this.pageIndex = pageIndex;
            this.pageSize = pageSize;
            this.ticket = ticket;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindUsersByEmailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FindUsersByEmailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Gro.Core.DataModels.Security.ResponseUser[] FindUsersByEmailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int totalRecords;
        
        public FindUsersByEmailResponse() {
        }
        
        public FindUsersByEmailResponse(Gro.Core.DataModels.Security.ResponseUser[] FindUsersByEmailResult, int totalRecords) {
            this.FindUsersByEmailResult = FindUsersByEmailResult;
            this.totalRecords = totalRecords;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecurityServiceChannel : Gro.Infrastructure.Data.SecurityService.ISecurityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityServiceClient : System.ServiceModel.ClientBase<Gro.Infrastructure.Data.SecurityService.ISecurityService>, Gro.Infrastructure.Data.SecurityService.ISecurityService {
        
        public SecurityServiceClient() {
        }
        
        public SecurityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsUserPasswordOutdated(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.IsUserPasswordOutdated(user, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserPasswordOutdatedAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.IsUserPasswordOutdatedAsync(user, ticket);
        }
        
        public void WriteLoginEvent(string customerNumber, string userId, string ip, string browser, bool success) {
            base.Channel.WriteLoginEvent(customerNumber, userId, ip, browser, success);
        }
        
        public System.Threading.Tasks.Task WriteLoginEventAsync(string customerNumber, string userId, string ip, string browser, bool success) {
            return base.Channel.WriteLoginEventAsync(customerNumber, userId, ip, browser, success);
        }
        
        public string GetTicket(string username, string password, string key) {
            return base.Channel.GetTicket(username, password, key);
        }
        
        public System.Threading.Tasks.Task<string> GetTicketAsync(string username, string password, string key) {
            return base.Channel.GetTicketAsync(username, password, key);
        }
        
        public bool ValidateTicket(string ticket) {
            return base.Channel.ValidateTicket(ticket);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateTicketAsync(string ticket) {
            return base.Channel.ValidateTicketAsync(ticket);
        }
        
        public bool ValidateUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.ValidateUser(user, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.ValidateUserAsync(user, ticket);
        }
        
        public bool SaveUserPictureURL(int userId, string pictureURL) {
            return base.Channel.SaveUserPictureURL(userId, pictureURL);
        }
        
        public System.Threading.Tasks.Task<bool> SaveUserPictureURLAsync(int userId, string pictureURL) {
            return base.Channel.SaveUserPictureURLAsync(userId, pictureURL);
        }
        
        public bool SaveCustomerPictureURL(int customerId, string pictureURL) {
            return base.Channel.SaveCustomerPictureURL(customerId, pictureURL);
        }
        
        public System.Threading.Tasks.Task<bool> SaveCustomerPictureURLAsync(int customerId, string pictureURL) {
            return base.Channel.SaveCustomerPictureURLAsync(customerId, pictureURL);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser GetUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetUser(user, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> GetUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetUserAsync(user, ticket);
        }
        
        public bool UnlockUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.UnlockUser(user, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> UnlockUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.UnlockUserAsync(user, ticket);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public void UpdateValid(string ticket) {
            base.Channel.UpdateValid(ticket);
        }
        
        public System.Threading.Tasks.Task UpdateValidAsync(string ticket) {
            return base.Channel.UpdateValidAsync(ticket);
        }
        
        public string[] GetSalesRoles(string ticket) {
            return base.Channel.GetSalesRoles(ticket);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSalesRolesAsync(string ticket) {
            return base.Channel.GetSalesRolesAsync(ticket);
        }
        
        public Gro.Core.DataModels.Security.User[] GetUsersForCustomer(int customerId, string ticket) {
            return base.Channel.GetUsersForCustomer(customerId, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.User[]> GetUsersForCustomerAsync(int customerId, string ticket) {
            return base.Channel.GetUsersForCustomerAsync(customerId, ticket);
        }
        
        public Gro.Core.DataModels.Security.CustomerBasicInfo[] GetCustomersForUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetCustomersForUser(user, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.CustomerBasicInfo[]> GetCustomersForUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetCustomersForUserAsync(user, ticket);
        }
        
        public string GetUserCustomerProfile(int userId, int customerId, string ticket) {
            return base.Channel.GetUserCustomerProfile(userId, customerId, ticket);
        }
        
        public System.Threading.Tasks.Task<string> GetUserCustomerProfileAsync(int userId, int customerId, string ticket) {
            return base.Channel.GetUserCustomerProfileAsync(userId, customerId, ticket);
        }
        
        public Gro.Core.DataModels.Security.UserProfile[] GetProfileForUser(int customerId, int userId, string ticket) {
            return base.Channel.GetProfileForUser(customerId, userId, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserProfile[]> GetProfileForUserAsync(int customerId, int userId, string ticket) {
            return base.Channel.GetProfileForUserAsync(customerId, userId, ticket);
        }
        
        public Gro.Core.DataModels.Security.UserProfile[] GetCustomerUsersByProfile(int customerId, string ticket) {
            return base.Channel.GetCustomerUsersByProfile(customerId, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserProfile[]> GetCustomerUsersByProfileAsync(int customerId, string ticket) {
            return base.Channel.GetCustomerUsersByProfileAsync(customerId, ticket);
        }
        
        public Gro.Core.DataModels.Security.Profile[] GetProfiles(string ticket) {
            return base.Channel.GetProfiles(ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Profile[]> GetProfilesAsync(string ticket) {
            return base.Channel.GetProfilesAsync(ticket);
        }
        
        public Gro.Core.DataModels.Security.ProfileRole[] GetProfileRoles(string profileId, string ticket) {
            return base.Channel.GetProfileRoles(profileId, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ProfileRole[]> GetProfileRolesAsync(string profileId, string ticket) {
            return base.Channel.GetProfileRolesAsync(profileId, ticket);
        }
        
        public int CheckSSNAgainstOrgNo(string customerNo, string SSN, string ticket) {
            return base.Channel.CheckSSNAgainstOrgNo(customerNo, SSN, ticket);
        }
        
        public System.Threading.Tasks.Task<int> CheckSSNAgainstOrgNoAsync(string customerNo, string SSN, string ticket) {
            return base.Channel.CheckSSNAgainstOrgNoAsync(customerNo, SSN, ticket);
        }
        
        public bool ChangePassword(Gro.Infrastructure.Data.SecurityService.RequestUser user, string oldPwd, string newPwd, string ticket) {
            return base.Channel.ChangePassword(user, oldPwd, newPwd, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string oldPwd, string newPwd, string ticket) {
            return base.Channel.ChangePasswordAsync(user, oldPwd, newPwd, ticket);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gro.Infrastructure.Data.SecurityService.CreateUserResponse Gro.Infrastructure.Data.SecurityService.ISecurityService.CreateUser(Gro.Infrastructure.Data.SecurityService.CreateUserRequest request) {
            return base.Channel.CreateUser(request);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, string ticket, out System.Web.Security.MembershipCreateStatus status) {
            Gro.Infrastructure.Data.SecurityService.CreateUserRequest inValue = new Gro.Infrastructure.Data.SecurityService.CreateUserRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.email = email;
            inValue.passwordQuestion = passwordQuestion;
            inValue.passwordAnswer = passwordAnswer;
            inValue.isApproved = isApproved;
            inValue.providerUserKey = providerUserKey;
            inValue.ticket = ticket;
            Gro.Infrastructure.Data.SecurityService.CreateUserResponse retVal = ((Gro.Infrastructure.Data.SecurityService.ISecurityService)(this)).CreateUser(inValue);
            status = retVal.status;
            return retVal.CreateUserResult;
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.CreateUserResponse> CreateUserAsync(Gro.Infrastructure.Data.SecurityService.CreateUserRequest request) {
            return base.Channel.CreateUserAsync(request);
        }
        
        public bool DeleteUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, bool deleteAllRelatedData, string ticket) {
            return base.Channel.DeleteUser(user, deleteAllRelatedData, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, bool deleteAllRelatedData, string ticket) {
            return base.Channel.DeleteUserAsync(user, deleteAllRelatedData, ticket);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gro.Infrastructure.Data.SecurityService.GetAllUsersResponse Gro.Infrastructure.Data.SecurityService.ISecurityService.GetAllUsers(Gro.Infrastructure.Data.SecurityService.GetAllUsersRequest request) {
            return base.Channel.GetAllUsers(request);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser[] GetAllUsers(string ticket, int pageIndex, int pageSize, out int totalRecords) {
            Gro.Infrastructure.Data.SecurityService.GetAllUsersRequest inValue = new Gro.Infrastructure.Data.SecurityService.GetAllUsersRequest();
            inValue.ticket = ticket;
            inValue.pageIndex = pageIndex;
            inValue.pageSize = pageSize;
            Gro.Infrastructure.Data.SecurityService.GetAllUsersResponse retVal = ((Gro.Infrastructure.Data.SecurityService.ISecurityService)(this)).GetAllUsers(inValue);
            totalRecords = retVal.totalRecords;
            return retVal.GetAllUsersResult;
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.GetAllUsersResponse> GetAllUsersAsync(Gro.Infrastructure.Data.SecurityService.GetAllUsersRequest request) {
            return base.Channel.GetAllUsersAsync(request);
        }
        
        public int GetNumberOfUsersOnline() {
            return base.Channel.GetNumberOfUsersOnline();
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfUsersOnlineAsync() {
            return base.Channel.GetNumberOfUsersOnlineAsync();
        }
        
        public string GetPassword(Gro.Infrastructure.Data.SecurityService.RequestUser user, string answer, string ticket) {
            return base.Channel.GetPassword(user, answer, ticket);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string answer, string ticket) {
            return base.Channel.GetPasswordAsync(user, answer, ticket);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser GetUserNameByEmail(string email, string ticket) {
            return base.Channel.GetUserNameByEmail(email, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> GetUserNameByEmailAsync(string email, string ticket) {
            return base.Channel.GetUserNameByEmailAsync(email, ticket);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser GetUserNameByEmailAndCustomerNumber(string email, string customerNumber, string ticket) {
            return base.Channel.GetUserNameByEmailAndCustomerNumber(email, customerNumber, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> GetUserNameByEmailAndCustomerNumberAsync(string email, string customerNumber, string ticket) {
            return base.Channel.GetUserNameByEmailAndCustomerNumberAsync(email, customerNumber, ticket);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser FindUserByEmail(string email, string ticket) {
            return base.Channel.FindUserByEmail(email, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> FindUserByEmailAsync(string email, string ticket) {
            return base.Channel.FindUserByEmailAsync(email, ticket);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser FindUserByName(string name, string ticket) {
            return base.Channel.FindUserByName(name, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser> FindUserByNameAsync(string name, string ticket) {
            return base.Channel.FindUserByNameAsync(name, ticket);
        }
        
        public string ResetPassword(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.ResetPassword(user, ticket);
        }
        
        public System.Threading.Tasks.Task<string> ResetPasswordAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.ResetPasswordAsync(user, ticket);
        }
        
        public bool UpdateUser(Gro.Infrastructure.Data.SecurityService.RequestUserDeep user, string ticket) {
            return base.Channel.UpdateUser(user, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUserDeep user, string ticket) {
            return base.Channel.UpdateUserAsync(user, ticket);
        }
        
        public void UpdateFailureCount(Gro.Infrastructure.Data.SecurityService.RequestUser user, string failureType, string ticket) {
            base.Channel.UpdateFailureCount(user, failureType, ticket);
        }
        
        public System.Threading.Tasks.Task UpdateFailureCountAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string failureType, string ticket) {
            return base.Channel.UpdateFailureCountAsync(user, failureType, ticket);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gro.Infrastructure.Data.SecurityService.FindUsersByNameResponse Gro.Infrastructure.Data.SecurityService.ISecurityService.FindUsersByName(Gro.Infrastructure.Data.SecurityService.FindUsersByNameRequest request) {
            return base.Channel.FindUsersByName(request);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser[] FindUsersByName(string usernameToMatch, int pageIndex, int pageSize, string ticket, out int totalRecords) {
            Gro.Infrastructure.Data.SecurityService.FindUsersByNameRequest inValue = new Gro.Infrastructure.Data.SecurityService.FindUsersByNameRequest();
            inValue.usernameToMatch = usernameToMatch;
            inValue.pageIndex = pageIndex;
            inValue.pageSize = pageSize;
            inValue.ticket = ticket;
            Gro.Infrastructure.Data.SecurityService.FindUsersByNameResponse retVal = ((Gro.Infrastructure.Data.SecurityService.ISecurityService)(this)).FindUsersByName(inValue);
            totalRecords = retVal.totalRecords;
            return retVal.FindUsersByNameResult;
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.FindUsersByNameResponse> FindUsersByNameAsync(Gro.Infrastructure.Data.SecurityService.FindUsersByNameRequest request) {
            return base.Channel.FindUsersByNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gro.Infrastructure.Data.SecurityService.FindUsersByEmailResponse Gro.Infrastructure.Data.SecurityService.ISecurityService.FindUsersByEmail(Gro.Infrastructure.Data.SecurityService.FindUsersByEmailRequest request) {
            return base.Channel.FindUsersByEmail(request);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser[] FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize, string ticket, out int totalRecords) {
            Gro.Infrastructure.Data.SecurityService.FindUsersByEmailRequest inValue = new Gro.Infrastructure.Data.SecurityService.FindUsersByEmailRequest();
            inValue.emailToMatch = emailToMatch;
            inValue.pageIndex = pageIndex;
            inValue.pageSize = pageSize;
            inValue.ticket = ticket;
            Gro.Infrastructure.Data.SecurityService.FindUsersByEmailResponse retVal = ((Gro.Infrastructure.Data.SecurityService.ISecurityService)(this)).FindUsersByEmail(inValue);
            totalRecords = retVal.totalRecords;
            return retVal.FindUsersByEmailResult;
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SecurityService.FindUsersByEmailResponse> FindUsersByEmailAsync(Gro.Infrastructure.Data.SecurityService.FindUsersByEmailRequest request) {
            return base.Channel.FindUsersByEmailAsync(request);
        }
        
        public void AddUsersToRoles(Gro.Infrastructure.Data.SecurityService.RequestUser[] user, string[] rolenames, string ticket) {
            base.Channel.AddUsersToRoles(user, rolenames, ticket);
        }
        
        public System.Threading.Tasks.Task AddUsersToRolesAsync(Gro.Infrastructure.Data.SecurityService.RequestUser[] user, string[] rolenames, string ticket) {
            return base.Channel.AddUsersToRolesAsync(user, rolenames, ticket);
        }
        
        public bool CreateRole(Gro.Infrastructure.Data.SecurityService.RequestRole role, string ticket) {
            return base.Channel.CreateRole(role, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> CreateRoleAsync(Gro.Infrastructure.Data.SecurityService.RequestRole role, string ticket) {
            return base.Channel.CreateRoleAsync(role, ticket);
        }
        
        public bool DeleteRole(string roleName, bool throwOnPopulatedRole, string ticket) {
            return base.Channel.DeleteRole(roleName, throwOnPopulatedRole, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoleAsync(string roleName, bool throwOnPopulatedRole, string ticket) {
            return base.Channel.DeleteRoleAsync(roleName, throwOnPopulatedRole, ticket);
        }
        
        public Gro.Core.DataModels.Security.Role[] GetAllRoles(string ticket) {
            return base.Channel.GetAllRoles(ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Role[]> GetAllRolesAsync(string ticket) {
            return base.Channel.GetAllRolesAsync(ticket);
        }
        
        public string[] GetPrimaryRoles(string ticket) {
            return base.Channel.GetPrimaryRoles(ticket);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPrimaryRolesAsync(string ticket) {
            return base.Channel.GetPrimaryRolesAsync(ticket);
        }
        
        public string[] GetNonPrimaryRoles(string ticket) {
            return base.Channel.GetNonPrimaryRoles(ticket);
        }
        
        public System.Threading.Tasks.Task<string[]> GetNonPrimaryRolesAsync(string ticket) {
            return base.Channel.GetNonPrimaryRolesAsync(ticket);
        }
        
        public Gro.Core.DataModels.Security.UserRole[] GetRolesForUser(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetRolesForUser(user, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserRole[]> GetRolesForUserAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetRolesForUserAsync(user, ticket);
        }
        
        public string[] GetSalesRolesForCustomer(string customerNumber, string ticket) {
            return base.Channel.GetSalesRolesForCustomer(customerNumber, ticket);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSalesRolesForCustomerAsync(string customerNumber, string ticket) {
            return base.Channel.GetSalesRolesForCustomerAsync(customerNumber, ticket);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser[] GetUsersInRole(string roleName, string ticket) {
            return base.Channel.GetUsersInRole(roleName, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser[]> GetUsersInRoleAsync(string roleName, string ticket) {
            return base.Channel.GetUsersInRoleAsync(roleName, ticket);
        }
        
        public bool IsUserInRole(Gro.Infrastructure.Data.SecurityService.RequestUser user, string roleName, string ticket) {
            return base.Channel.IsUserInRole(user, roleName, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserInRoleAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string roleName, string ticket) {
            return base.Channel.IsUserInRoleAsync(user, roleName, ticket);
        }
        
        public void RemoveUsersFromRoles(Gro.Infrastructure.Data.SecurityService.RequestUser[] users, Gro.Core.DataModels.Security.UserRole[] rolenames, string ticket) {
            base.Channel.RemoveUsersFromRoles(users, rolenames, ticket);
        }
        
        public System.Threading.Tasks.Task RemoveUsersFromRolesAsync(Gro.Infrastructure.Data.SecurityService.RequestUser[] users, Gro.Core.DataModels.Security.UserRole[] rolenames, string ticket) {
            return base.Channel.RemoveUsersFromRolesAsync(users, rolenames, ticket);
        }
        
        public bool RoleExists(string rolename, string ticket) {
            return base.Channel.RoleExists(rolename, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> RoleExistsAsync(string rolename, string ticket) {
            return base.Channel.RoleExistsAsync(rolename, ticket);
        }
        
        public Gro.Core.DataModels.Security.ResponseUser[] FindUsersInRole(string roleName, string usernameToMatch, string ticket) {
            return base.Channel.FindUsersInRole(roleName, usernameToMatch, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.ResponseUser[]> FindUsersInRoleAsync(string roleName, string usernameToMatch, string ticket) {
            return base.Channel.FindUsersInRoleAsync(roleName, usernameToMatch, ticket);
        }
        
        public Gro.Core.DataModels.Security.UserRights[] GetUserRights(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetUserRights(user, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.UserRights[]> GetUserRightsAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetUserRightsAsync(user, ticket);
        }
        
        public System.Collections.Generic.Dictionary<string, string[]> GetUserSecurityProfile(string userId, int customerId, string ticket) {
            return base.Channel.GetUserSecurityProfile(userId, customerId, ticket);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string[]>> GetUserSecurityProfileAsync(string userId, int customerId, string ticket) {
            return base.Channel.GetUserSecurityProfileAsync(userId, customerId, ticket);
        }
        
        public bool CheckPasswordGuid(Gro.Infrastructure.Data.SecurityService.RequestUser user, string guid, string ticket) {
            return base.Channel.CheckPasswordGuid(user, guid, ticket);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPasswordGuidAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string guid, string ticket) {
            return base.Channel.CheckPasswordGuidAsync(user, guid, ticket);
        }
        
        public string GetPasswordGuid(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetPasswordGuid(user, ticket);
        }
        
        public System.Threading.Tasks.Task<string> GetPasswordGuidAsync(Gro.Infrastructure.Data.SecurityService.RequestUser user, string ticket) {
            return base.Channel.GetPasswordGuidAsync(user, ticket);
        }
        
        public Gro.Core.DataModels.Security.Company GetExistingCustomer(string customerNo, string orgNo, string ticket) {
            return base.Channel.GetExistingCustomer(customerNo, orgNo, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Company> GetExistingCustomerAsync(string customerNo, string orgNo, string ticket) {
            return base.Channel.GetExistingCustomerAsync(customerNo, orgNo, ticket);
        }
        
        public Gro.Core.DataModels.Security.Role GetLuciaRole(string customerNr, string ssn, string ticket) {
            return base.Channel.GetLuciaRole(customerNr, ssn, ticket);
        }
        
        public System.Threading.Tasks.Task<Gro.Core.DataModels.Security.Role> GetLuciaRoleAsync(string customerNr, string ssn, string ticket) {
            return base.Channel.GetLuciaRoleAsync(customerNr, ssn, ticket);
        }
    }
}
