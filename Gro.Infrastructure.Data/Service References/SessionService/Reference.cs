//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gro.Infrastructure.Data.SessionService {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exceptions.ws.itim.ibm.com")]
    public partial class WSApplicationException : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.ws.itim.ibm.com")]
    public partial class WSLocale : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string countryField;
        
        private string variantField;
        
        private string languageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string variant {
            get {
                return this.variantField;
            }
            set {
                this.variantField = value;
                this.RaisePropertyChanged("variant");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
                this.RaisePropertyChanged("language");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exceptions.ws.itim.ibm.com")]
    public partial class WSUnsupportedVersionException : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exceptions.ws.itim.ibm.com")]
    public partial class WSInvalidSessionException : WSLoginServiceException {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSInvalidLoginException))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WSInvalidSessionException))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exceptions.ws.itim.ibm.com")]
    public partial class WSLoginServiceException : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://exceptions.ws.itim.ibm.com")]
    public partial class WSInvalidLoginException : WSLoginServiceException {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.ws.itim.ibm.com", ConfigurationName="SessionService.WSSessionService")]
    public interface WSSessionService {
        
        // CODEGEN: Parameter 'getChallengeQuestionsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSApplicationException), Action="", Name="fault1")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getChallengeQuestionsReturn")]
        Gro.Infrastructure.Data.SessionService.getChallengeQuestionsResponse getChallengeQuestions(Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.getChallengeQuestionsResponse> getChallengeQuestionsAsync(Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSApplicationException), Action="", Name="fault1")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getItimFixpackLevelReturn")]
        int getItimFixpackLevel();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getItimFixpackLevelReturn")]
        System.Threading.Tasks.Task<int> getItimFixpackLevelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSApplicationException), Action="", Name="fault1")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getItimVersionReturn")]
        float getItimVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getItimVersionReturn")]
        System.Threading.Tasks.Task<float> getItimVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSUnsupportedVersionException), Action="", Name="fault3")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getItimVersionInfoReturn")]
        Gro.Infrastructure.Data.SessionService.WSVersionInfo getItimVersionInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getItimVersionInfoReturn")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.WSVersionInfo> getItimVersionInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSApplicationException), Action="", Name="fault1")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getWebServicesBuildNumberReturn")]
        int getWebServicesBuildNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getWebServicesBuildNumberReturn")]
        System.Threading.Tasks.Task<int> getWebServicesBuildNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSApplicationException), Action="", Name="fault1")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getWebServicesTargetTypeReturn")]
        string getWebServicesTargetType();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getWebServicesTargetTypeReturn")]
        System.Threading.Tasks.Task<string> getWebServicesTargetTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSApplicationException), Action="", Name="fault1")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getWebServicesVersionReturn")]
        float getWebServicesVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getWebServicesVersionReturn")]
        System.Threading.Tasks.Task<float> getWebServicesVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSInvalidSessionException), Action="", Name="fault2")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSApplicationException), Action="", Name="fault1")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isPasswordEditingAllowedReturn")]
        bool isPasswordEditingAllowed(Gro.Infrastructure.Data.SessionService.WSSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isPasswordEditingAllowedReturn")]
        System.Threading.Tasks.Task<bool> isPasswordEditingAllowedAsync(Gro.Infrastructure.Data.SessionService.WSSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSInvalidLoginException), Action="", Name="fault4")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSLoginServiceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="loginReturn")]
        Gro.Infrastructure.Data.SessionService.WSSession login(string principal, string credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="loginReturn")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.WSSession> loginAsync(string principal, string credential);
        
        // CODEGEN: Parameter 'challengeInfo' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSLoginServiceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="lostPasswordLoginDirectEntryReturn")]
        Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryResponse lostPasswordLoginDirectEntry(Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryResponse> lostPasswordLoginDirectEntryAsync(Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest request);
        
        // CODEGEN: Parameter 'challengeInfo' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSLoginServiceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="lostPasswordLoginResetPasswordReturn")]
        Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordResponse lostPasswordLoginResetPassword(Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordResponse> lostPasswordLoginResetPasswordAsync(Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Gro.Infrastructure.Data.SessionService.WSLoginServiceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void logout(Gro.Infrastructure.Data.SessionService.WSSession session);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task logoutAsync(Gro.Infrastructure.Data.SessionService.WSSession session);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getChallengeQuestions", WrapperNamespace="http://services.ws.itim.ibm.com", IsWrapped=true)]
    public partial class getChallengeQuestionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=0)]
        public string principle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=1)]
        public Gro.Infrastructure.Data.SessionService.WSLocale wsLocale;
        
        public getChallengeQuestionsRequest() {
        }
        
        public getChallengeQuestionsRequest(string principle, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            this.principle = principle;
            this.wsLocale = wsLocale;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getChallengeQuestionsResponse", WrapperNamespace="http://services.ws.itim.ibm.com", IsWrapped=true)]
    public partial class getChallengeQuestionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getChallengeQuestionsReturn")]
        public string[] getChallengeQuestionsReturn;
        
        public getChallengeQuestionsResponse() {
        }
        
        public getChallengeQuestionsResponse(string[] getChallengeQuestionsReturn) {
            this.getChallengeQuestionsReturn = getChallengeQuestionsReturn;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.ws.itim.ibm.com")]
    public partial class WSVersionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string buildNumberField;
        
        private string fixPackLevelField;
        
        private string buildDateField;
        
        private string buildTimeField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string buildNumber {
            get {
                return this.buildNumberField;
            }
            set {
                this.buildNumberField = value;
                this.RaisePropertyChanged("buildNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string fixPackLevel {
            get {
                return this.fixPackLevelField;
            }
            set {
                this.fixPackLevelField = value;
                this.RaisePropertyChanged("fixPackLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string buildDate {
            get {
                return this.buildDateField;
            }
            set {
                this.buildDateField = value;
                this.RaisePropertyChanged("buildDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string buildTime {
            get {
                return this.buildTimeField;
            }
            set {
                this.buildTimeField = value;
                this.RaisePropertyChanged("buildTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.ws.itim.ibm.com")]
    public partial class WSSession : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientSessionField;
        
        private bool enforceChallengeResponseField;
        
        private WSLocale localeField;
        
        private long sessionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string clientSession {
            get {
                return this.clientSessionField;
            }
            set {
                this.clientSessionField = value;
                this.RaisePropertyChanged("clientSession");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool enforceChallengeResponse {
            get {
                return this.enforceChallengeResponseField;
            }
            set {
                this.enforceChallengeResponseField = value;
                this.RaisePropertyChanged("enforceChallengeResponse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public WSLocale locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
                this.RaisePropertyChanged("locale");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long sessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
                this.RaisePropertyChanged("sessionID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://model.ws.itim.ibm.com")]
    public partial class WSChallengeResponseInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string questionField;
        
        private string answerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
                this.RaisePropertyChanged("question");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
                this.RaisePropertyChanged("answer");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="lostPasswordLoginDirectEntry", WrapperNamespace="http://services.ws.itim.ibm.com", IsWrapped=true)]
    public partial class lostPasswordLoginDirectEntryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=0)]
        public string principle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("challengeInfo")]
        public Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=2)]
        public string newPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=3)]
        public Gro.Infrastructure.Data.SessionService.WSLocale wsLocale;
        
        public lostPasswordLoginDirectEntryRequest() {
        }
        
        public lostPasswordLoginDirectEntryRequest(string principle, Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo, string newPassword, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            this.principle = principle;
            this.challengeInfo = challengeInfo;
            this.newPassword = newPassword;
            this.wsLocale = wsLocale;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="lostPasswordLoginDirectEntryResponse", WrapperNamespace="http://services.ws.itim.ibm.com", IsWrapped=true)]
    public partial class lostPasswordLoginDirectEntryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=0)]
        public Gro.Infrastructure.Data.SessionService.WSSession lostPasswordLoginDirectEntryReturn;
        
        public lostPasswordLoginDirectEntryResponse() {
        }
        
        public lostPasswordLoginDirectEntryResponse(Gro.Infrastructure.Data.SessionService.WSSession lostPasswordLoginDirectEntryReturn) {
            this.lostPasswordLoginDirectEntryReturn = lostPasswordLoginDirectEntryReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="lostPasswordLoginResetPassword", WrapperNamespace="http://services.ws.itim.ibm.com", IsWrapped=true)]
    public partial class lostPasswordLoginResetPasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=0)]
        public string principle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("challengeInfo")]
        public Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=2)]
        public Gro.Infrastructure.Data.SessionService.WSLocale wsLocale;
        
        public lostPasswordLoginResetPasswordRequest() {
        }
        
        public lostPasswordLoginResetPasswordRequest(string principle, Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            this.principle = principle;
            this.challengeInfo = challengeInfo;
            this.wsLocale = wsLocale;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="lostPasswordLoginResetPasswordResponse", WrapperNamespace="http://services.ws.itim.ibm.com", IsWrapped=true)]
    public partial class lostPasswordLoginResetPasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://services.ws.itim.ibm.com", Order=0)]
        public string lostPasswordLoginResetPasswordReturn;
        
        public lostPasswordLoginResetPasswordResponse() {
        }
        
        public lostPasswordLoginResetPasswordResponse(string lostPasswordLoginResetPasswordReturn) {
            this.lostPasswordLoginResetPasswordReturn = lostPasswordLoginResetPasswordReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSSessionServiceChannel : Gro.Infrastructure.Data.SessionService.WSSessionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSSessionServiceClient : System.ServiceModel.ClientBase<Gro.Infrastructure.Data.SessionService.WSSessionService>, Gro.Infrastructure.Data.SessionService.WSSessionService {
        
        public WSSessionServiceClient() {
        }
        
        public WSSessionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSSessionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSessionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSessionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gro.Infrastructure.Data.SessionService.getChallengeQuestionsResponse Gro.Infrastructure.Data.SessionService.WSSessionService.getChallengeQuestions(Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest request) {
            return base.Channel.getChallengeQuestions(request);
        }
        
        public string[] getChallengeQuestions(string principle, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest inValue = new Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest();
            inValue.principle = principle;
            inValue.wsLocale = wsLocale;
            Gro.Infrastructure.Data.SessionService.getChallengeQuestionsResponse retVal = ((Gro.Infrastructure.Data.SessionService.WSSessionService)(this)).getChallengeQuestions(inValue);
            return retVal.getChallengeQuestionsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.getChallengeQuestionsResponse> Gro.Infrastructure.Data.SessionService.WSSessionService.getChallengeQuestionsAsync(Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest request) {
            return base.Channel.getChallengeQuestionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.getChallengeQuestionsResponse> getChallengeQuestionsAsync(string principle, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest inValue = new Gro.Infrastructure.Data.SessionService.getChallengeQuestionsRequest();
            inValue.principle = principle;
            inValue.wsLocale = wsLocale;
            return ((Gro.Infrastructure.Data.SessionService.WSSessionService)(this)).getChallengeQuestionsAsync(inValue);
        }
        
        public int getItimFixpackLevel() {
            return base.Channel.getItimFixpackLevel();
        }
        
        public System.Threading.Tasks.Task<int> getItimFixpackLevelAsync() {
            return base.Channel.getItimFixpackLevelAsync();
        }
        
        public float getItimVersion() {
            return base.Channel.getItimVersion();
        }
        
        public System.Threading.Tasks.Task<float> getItimVersionAsync() {
            return base.Channel.getItimVersionAsync();
        }
        
        public Gro.Infrastructure.Data.SessionService.WSVersionInfo getItimVersionInfo() {
            return base.Channel.getItimVersionInfo();
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.WSVersionInfo> getItimVersionInfoAsync() {
            return base.Channel.getItimVersionInfoAsync();
        }
        
        public int getWebServicesBuildNumber() {
            return base.Channel.getWebServicesBuildNumber();
        }
        
        public System.Threading.Tasks.Task<int> getWebServicesBuildNumberAsync() {
            return base.Channel.getWebServicesBuildNumberAsync();
        }
        
        public string getWebServicesTargetType() {
            return base.Channel.getWebServicesTargetType();
        }
        
        public System.Threading.Tasks.Task<string> getWebServicesTargetTypeAsync() {
            return base.Channel.getWebServicesTargetTypeAsync();
        }
        
        public float getWebServicesVersion() {
            return base.Channel.getWebServicesVersion();
        }
        
        public System.Threading.Tasks.Task<float> getWebServicesVersionAsync() {
            return base.Channel.getWebServicesVersionAsync();
        }
        
        public bool isPasswordEditingAllowed(Gro.Infrastructure.Data.SessionService.WSSession session) {
            return base.Channel.isPasswordEditingAllowed(session);
        }
        
        public System.Threading.Tasks.Task<bool> isPasswordEditingAllowedAsync(Gro.Infrastructure.Data.SessionService.WSSession session) {
            return base.Channel.isPasswordEditingAllowedAsync(session);
        }
        
        public Gro.Infrastructure.Data.SessionService.WSSession login(string principal, string credential) {
            return base.Channel.login(principal, credential);
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.WSSession> loginAsync(string principal, string credential) {
            return base.Channel.loginAsync(principal, credential);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryResponse Gro.Infrastructure.Data.SessionService.WSSessionService.lostPasswordLoginDirectEntry(Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest request) {
            return base.Channel.lostPasswordLoginDirectEntry(request);
        }
        
        public Gro.Infrastructure.Data.SessionService.WSSession lostPasswordLoginDirectEntry(string principle, Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo, string newPassword, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest inValue = new Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest();
            inValue.principle = principle;
            inValue.challengeInfo = challengeInfo;
            inValue.newPassword = newPassword;
            inValue.wsLocale = wsLocale;
            Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryResponse retVal = ((Gro.Infrastructure.Data.SessionService.WSSessionService)(this)).lostPasswordLoginDirectEntry(inValue);
            return retVal.lostPasswordLoginDirectEntryReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryResponse> Gro.Infrastructure.Data.SessionService.WSSessionService.lostPasswordLoginDirectEntryAsync(Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest request) {
            return base.Channel.lostPasswordLoginDirectEntryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryResponse> lostPasswordLoginDirectEntryAsync(string principle, Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo, string newPassword, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest inValue = new Gro.Infrastructure.Data.SessionService.lostPasswordLoginDirectEntryRequest();
            inValue.principle = principle;
            inValue.challengeInfo = challengeInfo;
            inValue.newPassword = newPassword;
            inValue.wsLocale = wsLocale;
            return ((Gro.Infrastructure.Data.SessionService.WSSessionService)(this)).lostPasswordLoginDirectEntryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordResponse Gro.Infrastructure.Data.SessionService.WSSessionService.lostPasswordLoginResetPassword(Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest request) {
            return base.Channel.lostPasswordLoginResetPassword(request);
        }
        
        public string lostPasswordLoginResetPassword(string principle, Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest inValue = new Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest();
            inValue.principle = principle;
            inValue.challengeInfo = challengeInfo;
            inValue.wsLocale = wsLocale;
            Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordResponse retVal = ((Gro.Infrastructure.Data.SessionService.WSSessionService)(this)).lostPasswordLoginResetPassword(inValue);
            return retVal.lostPasswordLoginResetPasswordReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordResponse> Gro.Infrastructure.Data.SessionService.WSSessionService.lostPasswordLoginResetPasswordAsync(Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest request) {
            return base.Channel.lostPasswordLoginResetPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordResponse> lostPasswordLoginResetPasswordAsync(string principle, Gro.Infrastructure.Data.SessionService.WSChallengeResponseInfo[] challengeInfo, Gro.Infrastructure.Data.SessionService.WSLocale wsLocale) {
            Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest inValue = new Gro.Infrastructure.Data.SessionService.lostPasswordLoginResetPasswordRequest();
            inValue.principle = principle;
            inValue.challengeInfo = challengeInfo;
            inValue.wsLocale = wsLocale;
            return ((Gro.Infrastructure.Data.SessionService.WSSessionService)(this)).lostPasswordLoginResetPasswordAsync(inValue);
        }
        
        public void logout(Gro.Infrastructure.Data.SessionService.WSSession session) {
            base.Channel.logout(session);
        }
        
        public System.Threading.Tasks.Task logoutAsync(Gro.Infrastructure.Data.SessionService.WSSession session) {
            return base.Channel.logoutAsync(session);
        }
    }
}
